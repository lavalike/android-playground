<resources>
    <string name="app_name">技术练兵</string>
    <!--菜单-->
    <string name="action_about">关于</string>

    <!--通用提示信息-->
    <string name="error_network_failure">无网络</string>
    <string name="error_network_timeout">网络连接超时</string>
    <string name="tip_loading">加载中</string>
    <string name="tip_accessibility">AndroidExercise自动化辅助测试\n\t\tAccessibilityService是一个辅助类，可以监听我们手机的焦点，窗口变化，按钮点击等等。实现它的服务需要在手机设置里面->辅助功能在这里面找到你自己实现的辅助类，然后打开它就可以进行我们一系列的监听了。</string>
    <string name="tip_qq_accessibility">QQ自动发消息辅助服务</string>

    <string name="tip_permission_set">设置</string>
    <string name="tip_permission_cancel">取消</string>
    <string name="tip_permission_msg">需要开启权限才能使用此功能</string>

    <string name="item_litepal">LitePal</string>
    <string name="item_greendao">GreenDao</string>
    <string name="item_retrofit">Retrofit 2.0</string>
    <string name="item_loadmore">加载更多</string>
    <string name="item_slidingmenu">自定义侧滑菜单</string>
    <string name="item_flowlayout">流式布局</string>
    <string name="item_accessibility">自动化辅助</string>
    <string name="item_24hanim">24hour动画</string>
    <string name="item_threadpool">线程池</string>
    <string name="item_broadcast">广播</string>
    <string name="item_dispatch">事件分发</string>
    <string name="item_drawerslide">DrawerLayout</string>
    <string name="item_andServer">AndServer</string>
    <string name="item_myRecycler">MyRecycler</string>
    <string name="item_ripple">Ripple</string>
    <string name="item_view">View</string>
    <string name="item_text_link">TextView链接</string>
    <string name="item_text_format">TextView格式</string>
    <string name="item_rxjava">RxJava</string>
    <string name="item_recycler_touch">ItemTouchHelper</string>
    <string name="item_recorder">Recorder</string>
    <string name="item_floor">评论盖楼</string>
    <string name="item_edit_view">EditView</string>
    <string name="item_wave_view">WaveView</string>
    <string name="item_anim_view">AnimView</string>
    <string name="item_porter_duff">PorterDuff.Mode</string>
    <string name="item_scrollview">扩展ScrollView</string>
    <string name="item_view_animation">View动画</string>
    <string name="item_frame_animation">Frame动画</string>
    <string name="item_pull_layout">弹性布局</string>
    <string name="item_ice_switch">页面切换动画</string>
    <string name="item_ad_window">广告弹窗</string>
    <string name="item_annotation_runtime">运行时注解</string>
    <string name="item_annotation_compile">编译时注解</string>
    <string name="item_recycler_hover">分组悬停</string>
    <string name="item_recycler_tik_tok">抖音</string>
    <string name="item_state_button">状态按钮</string>
    <string name="item_notification">notification</string>
    <string name="item_invoke_app">调起24hour</string>
    <string name="item_path">Path</string>
    <string name="item_path_measure">PathMeasure</string>
    <string name="item_path_search">PathSearch</string>
    <string name="item_qq_auto_msg">QQ自动消息</string>
    <string name="item_bit_opt">位操作</string>
    <string name="item_camera_video">录视频</string>
    <string name="item_priority_queue">PriorityQueue</string>
    <string name="item_task_sequence">顺序执行Queue</string>
    <string name="item_hashmap_treeify">HashMap树化</string>
    <string name="item_stream">stream</string>
    <string name="item_refresh_layout">RefreshLayout</string>
    <string name="item_view_switcher">View轮播</string>
    <string name="item_multi_touch">多点触摸</string>
    <string name="item_calendar">日历</string>
    <string name="item_download">DownloadClient</string>
    <string name="item_html_rich_text">Html富文本</string>
    <string name="item_kotlin">kotlin</string>
    <string name="item_exoplayer">ExoPlayer</string>
    <string name="item_ijkplayer">ijkPlayer</string>
    <string name="item_object_box">ObjectBox</string>
    <string name="item_work_manager">WorkManager</string>
    <string name="item_room">Room</string>
    <string name="item_navigation">Navigation</string>
    <string name="item_data_binding">DataBinding</string>
    <string name="item_lifecycle">Lifecycle</string>
    <string name="item_data_store">DataStore</string>
    <string name="item_biometric">Biometric</string>
    <string name="item_mmkv">MMKV</string>
    <string name="item_adapter">加载更多</string>
    <string name="item_circle_image">圆角图片</string>
    <string name="item_bitmap_optimize">bitmap优化</string>
    <string name="item_large_bitmap">加载巨图</string>
    <string name="item_shared_elements">共享元素</string>
    <string name="item_hook">Hook</string>
    <string name="item_okhttp_websocket">OkHttp长连接</string>
    <string name="item_wifi">Wifi</string>
    <string name="item_bluetooth">bluetooth</string>
    <string name="item_scoped_storage">分区存储</string>
    <string name="item_telephony_compat">电话权限</string>
    <string name="item_toast_compat">Toast权限</string>
    <string name="item_kotlin_coroutines">kotlin协程</string>
    <string name="item_kotlin_serialization">serialization</string>
    <string name="item_md5">md5</string>
    <string name="item_messenger">messenger</string>
    <string name="item_swipe_close">滑动关闭</string>
    <string name="item_motion_layout">MotionLayout</string>
    <string name="large_image_bitmap_region_decoder">BitmapRegionDecoder</string>
    <string name="large_image_subsampling_imageview">SubsamplingScaleImageView</string>
    <string name="item_android13_post_notification">Post Notification</string>
    <string name="item_android13_new_permissions">新增权限</string>
    <string name="item_android13_back_invoked_callback">全新Back导航</string>

    <string name="new_permission_explain">如果同时请求 READ_MEDIA_IMAGES 权限和 READ_MEDIA_VIDEO 权限，系统只会显示一个系统权限对话框\n\n如果应用只需要访问图片、照片和视频，请考虑使用照片选择器，而不是声明 READ_MEDIA_IMAGES 和 READ_MEDIA_VIDEO 权限\n\n如果是升级Android13之后新装的应用，并且targetSDK大于等于33，则申请READ_EXTERNAL_STORAGE权限时会自动拒绝（同理WRITE_EXTERNAL_STORAGE也是一样）</string>
    <string name="permission_external_storage">READ_EXTERNAL_STORAGE</string>
    <string name="new_permission_media_images">READ_MEDIA_IMAGES</string>
    <string name="new_permission_media_video">READ_MEDIA_VIDEO</string>
    <string name="new_permission_media_audio">READ_MEDIA_AUDIO</string>
    <string name="new_permission_pick_image">ACTION_PICK_IMAGES(no permission)</string>
    <string name="new_permission_nearby_wifi_devices">NEARBY_WIFI_DEVICES</string>
    <string name="new_permission_body_sensors">BODY_SENSORS</string>

    <string name="new_permission_revoke_all">Revoke All Permissions</string>
    <string name="new_permission_revoke_success">Permissions Will Be Revoked On Process Kill</string>
    <string name="new_permission_revoke_unsupported">Revoke Unsupported</string>

    <string name="item_clipboard_sensitive">剪贴板敏感内容</string>
    <string name="clipboard_copy_plain">复制普通内容</string>
    <string name="clipboard_copy_sensitive">复制敏感内容</string>

    <string name="item_intent_match">Intent匹配</string>
    <string name="intent_match_open_permissions">Open Permissions</string>

    <string name="item_drag_and_drop">DragAndDrop</string>
    <string name="drag_and_drop_drag_me">drag me</string>
    <string name="drag_and_drop_drop_here">drop here</string>
    <string name="drag_and_drop_text">Dropped Text: %s</string>

    <string name="item_dagger">Dagger2</string>
    <string name="dagger2_introduction">Dagger2起源于Dagger，是一款基于Java注解来实现的完全在编译阶段完成依赖注入的开源库，主要用于模块间解耦、提高代码的健壮性和可维护性。Dagger2在编译阶段通过apt利用Java注解自动生成Java代码，然后结合手写的代码来自动帮我们完成依赖注入的工作。\n\n起初Square公司受到Guice的启发而开发了Dagger，但是Dagger这种半静态半运行时的框架还是有些性能问题（虽说依赖注入是完全静态的，但是其有向无环图(Directed Acyclic Graph)还是基于反射来生成的，这无论在大型的服务端应用还是在Android应用上都不是最优方案）。因此Google工程师Fork了Dagger项目，对它进行了改造，Dagger2其实就是高配版的Dagger。</string>

    <string name="item_hilt">Hilt</string>
    <string name="hilt_introduction">Hilt 是 Android 的依赖项注入库，可减少在项目中执行手动依赖项注入的样板代码。执行手动依赖项注入要求您手动构造每个类及其依赖项，并借助容器重复使用和管理依赖项。\n\nHilt 通过为项目中的每个 Android 类提供容器并自动管理其生命周期，提供了一种在应用中使用 DI（依赖项注入）的标准方法。Hilt 在热门 DI 库 Dagger 的基础上构建而成，因而能够受益于 Dagger 的编译时正确性、运行时性能、可伸缩性和 Android Studio 支持。\n\n因Hilt与Dagger2无法共存，请自行探索。</string>

    <string name="item_koin">Koin</string>
    <string name="koin_introduction">Koin 是为 Kotlin 开发者提供的一个实用型轻量级依赖注入框架，采用纯 Kotlin 语言编写而成，仅使用功能解析，无代理、无代码生成、无反射。</string>

    <string name="item_kodein">Kodein-DI</string>
    <string name="kodein_introduction">Kodein-DI是一个非常实用的依赖注入框架，实际上，Kodein并不是一个依赖注入库，官方称之为依赖注入容器，它非常易于使用和配置。\n\n为什么要使用Kodein-DI：\n懒加载实例，需要时才会初始化对象\n不必关心依赖初始化顺序，自动查找需要使用的对象\n通过provider或factory将类或接口绑定到它们的实例\n易于调试\n\nKodein-DI的优点：\n体积小，速度快，经过优化（广泛使用内联）\n使用DSL语法，简单易读\n不受泛型擦除的影响（比如Java）\n100%兼容Java、Android\n使用kolin风格编码</string>

    <string name="item_typewriter">打字机</string>

    <string name="item_timber">Timber</string>

    <string name="android14_fullscreen_notification">在 Android11（API level 30）上就可以调用 Notification.Builder.setFullScreenIntent 方法在锁屏上展示一些全屏的通知了，不过得在 Manifest 文件中申请 USE_FULL_SCREEN_INTENT 权限。\n全屏通知是为了让用户立即注意到的高优先级通知而设计的，例如来电或用户配置的闹钟，在展示全全屏通知时，用户只能上滑退出。\n从 Android14 开始，允许使用此权限的应用程序仅限于那些只提供通话和警报的应用。对于其他应用，Google Play 商店会撤销它们默认的 USE_FULL_SCREEN_INTENT 权限。\n可以使用新的 API NotificationManager.canUseFullScreenIntent() 检查应用是否有权限；如果没有，可以用新的 ACTION_MANAGE_APP_USE_FULL_SCREEN_INTENT 来启动用户可以授予该权限的设置页面。</string>
    <string name="android14_fullscreen_request_post_permission">POST_NOTIFICATIONS</string>
    <string name="android14_fullscreen_check_settings">检查全屏通知权限</string>
    <string name="android14_fullscreen_send_fullscreen">发送全屏通知</string>
</resources>
